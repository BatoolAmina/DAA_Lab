Ques: What is the relationship among P, NP and NP complete problems show with the help of a diagram

Relationship Between P, NP, and NP-Complete Problems
To understand the relationship among P, NP, and NP-Complete problems, we need to first define these terms:

P (Polynomial Time):
Class of problems that can be solved in polynomial time (i.e., the time required to solve the problem grows at a polynomial rate with the input size). These problems are considered efficiently solvable.
Example: Sorting, searching in a list.

NP (Nondeterministic Polynomial Time):
Class of problems for which a proposed solution can be verified in polynomial time. In other words, if you are given a potential solution to an NP problem, you can check whether it’s correct in polynomial time.
It’s not necessary that an NP problem can be solved in polynomial time, only that the solution can be verified in polynomial time.
Example: The Traveling Salesman Problem (TSP) and Knapsack Problem.

NP-Complete:
These are the most difficult problems in NP. An NP-Complete problem is one that is in NP, and every other problem in NP can be reduced to it in polynomial time. In other words, if you can solve one NP-Complete problem efficiently (in polynomial time), you can solve all NP problems efficiently.
Example: SAT (Boolean Satisfiability), Knapsack Problem (0/1 Knapsack).

NP-Hard:
These are problems that are at least as hard as the hardest problems in NP, but they may not necessarily be in NP themselves. Solving an NP-Hard problem efficiently would imply solving all NP problems efficiently.
